{"title":"NEAR SDK - 构建合约","uid":"a23d5d06f30f38065a9f935e1d761d88","slug":"构建合约","date":"2022-03-14T11:55:53.530Z","updated":"2022-03-15T12:02:07.968Z","comments":true,"path":"api/articles/构建合约.json","keywords":"区块链, NEAR Protocol, 智能合约, 夜影协议, NEAR","cover":null,"content":"<h3 id=\"基本说明\"><a href=\"#基本说明\" class=\"headerlink\" title=\"基本说明\"></a>基本说明</h3><p>你可以通过下面的命令来编译出你的合约的发行版本</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">cargo build --target wasm32-unknown-unknown --release<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>上面的<code>build</code>命令指定了一个<code>target</code>标志来创建一个WebAssembly<code>.wasm</code>文件</p></blockquote>\n<p>注意你的工程目录现在增加了一点文件:</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token punctuation\">.</span>\n├── <span class=\"token class-name\">Cargo</span><span class=\"token punctuation\">.</span>lock  ⟵ created during build to lock dependencies\n├── <span class=\"token class-name\">Cargo</span><span class=\"token punctuation\">.</span>toml\n├── src\n│  └── lib<span class=\"token punctuation\">.</span>rs\n└── target      ⟵ created during build<span class=\"token punctuation\">,</span> holds the compiled wasm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"构建和标记\"><a href=\"#构建和标记\" class=\"headerlink\" title=\"构建和标记\"></a>构建和标记</h4><p>我们推荐你使用下面的标记来优化你的构建产物</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">env &#39;RUSTFLAGS&#x3D;-C link-arg&#x3D;-s&#39; cargo build --target wasm32-unknown-unknown --release<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>上面的命令本质上是设置了特殊的标记来优化构建产物.最终,它也只是一个个性化的<code>cargo build --release</code>命令罢了</p>\n<p><strong>Windows用户</strong>:请像这样这样修改上面的命令:</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">set RUSTFLAGS&#x3D;-C link-arg&#x3D;-s\ncargo build --target wasm32-unknown-unknown --release<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>你可以将标记添加至<code>ProjectFolder/.cargo/config.toml</code>来简化你的命令</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[target.wasm32-unknown-unknown]\nrustflags &#x3D; [&quot;-C&quot;, &quot;link-arg&#x3D;-s&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><a href=\"https://github.com/near/near-sdk-rs/blob/05e4539a8f3db86dd43b768ee9660dd4c8e7ea5c/examples/fungible-token/.cargo/config.toml\">这里</a>可以找到示例</p>\n<h3 id=\"可重现的构造\"><a href=\"#可重现的构造\" class=\"headerlink\" title=\"可重现的构造\"></a>可重现的构造</h3><p>可重现的构造使得不同的人构造同样的程序,并得到彼此完全相同的输出.这将帮助用户信任已部署的合约是正确构造的,并且与源代码对应.要验证您的合约,用户可以自己构造它,并检查二进制文件是否相同.</p>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>如果你在两台不同的机器上构建你的合约.你大概率会得到两份相似但不完全相同的二进制文件.你的构造产物会受你的换进的时区,低点,构造路径等十亿种因素的影响.Rust社区为解决这个问题已经战斗了很长的时间了.但是现在还没有解决</p>\n<h4 id=\"CI解决方案\"><a href=\"#CI解决方案\" class=\"headerlink\" title=\"CI解决方案\"></a>CI解决方案</h4><p>我们建议你使用我们的<a href=\"https://github.com/near/near-sdk-rs/tree/master/contract-builder\">Contract Builder</a>来构造你的合约.它使用Docker,您和您的用户都可以使用相同的可控的环境.Docker镜像在<a href=\"https://www.near-sdk.io/building/reproducible-builds\">这里</a>.合约在Contract Builder中构造出的二进制文件与在其他的机器中构造出来的一样</p>\n<h3 id=\"后期处理工具\"><a href=\"#后期处理工具\" class=\"headerlink\" title=\"后期处理工具\"></a>后期处理工具</h3><p>合约的大小是一个关键的特征.让它保持最小的最好方法是设计良好的极简代码,减少依赖项的数量.这在大型合约和大型多合约dApp中尤为重要,因为他们的部署会花费大量资金</p>\n<p>当你尽你所能优化了合约代码,通过减少合约规模来减小合约大小是值得的</p>\n<h4 id=\"准备使用脚本\"><a href=\"#准备使用脚本\" class=\"headerlink\" title=\"准备使用脚本\"></a>准备使用脚本</h4><p>我们准备了一个简单的<code>bash</code>脚本来修剪<code>.wasm</code>合约文件.你可以在<a href=\"https://www.near-sdk.io/building/post-processing-tools\">这里</a>找到它</p>\n<p>目前使用的缩小规模的方法如下:</p>\n<ul>\n<li>使用<code>wasm-snip</code>从标准库中删除一些已知的fat函数(如浮点格式和panic相关)</li>\n<li>使用<code>wasm-gc</code>从剪切掉的函数中排除所有可用到的函数</li>\n<li>去掉不需要的部分,比如使用<code>wasm-strip</code></li>\n<li>运行<code> binaryen wasm-opt</code>,它会清除剩下的内容</li>\n</ul>\n<h4 id=\"运行脚本的要求\"><a href=\"#运行脚本的要求\" class=\"headerlink\" title=\"运行脚本的要求\"></a>运行脚本的要求</h4><ul>\n<li><p>通过Cargo安装<code>wasm-snip</code>和<code>wasm-gc</code>:</p>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">cargo install wasm-snip wasm-gc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>对于Ubuntu和其他基于Debian的Linux发行版,在你的系统中安装<code>binaryen</code>和<code>wabt</code>.</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">apt install binaryen wabt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"警告\"><a href=\"#警告\" class=\"headerlink\" title=\"警告\"></a>警告</h4><p>缩减可能是相当激进的.所以你必须测试缩减后的合约.<code>[独立的NEAR运行时](https://www.near-sdk.io/building/post-processing-tools)</code>可能是有用的.</p>\n","feature":true,"text":"基本说明你可以通过下面的命令来编译出你的合约的发行版本 cargo build --target wasm32-unknown-unknown --release 上面的build命令指定了一个target标志来创建一个WebAssembly.wasm文件 注意你的工程目录现在增...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"文档翻译","slug":"文档翻译","count":6,"path":"api/categories/文档翻译.json"}],"tags":[{"name":"NEAR","slug":"NEAR","count":6,"path":"api/tags/NEAR.json"},{"name":"near-sdk-rs","slug":"near-sdk-rs","count":6,"path":"api/tags/near-sdk-rs.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">基本说明</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E5%BB%BA%E5%92%8C%E6%A0%87%E8%AE%B0\"><span class=\"toc-text\">构建和标记</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E9%87%8D%E7%8E%B0%E7%9A%84%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">可重现的构造</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CI%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">CI解决方案</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8E%E6%9C%9F%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">后期处理工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">准备使用脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E7%9A%84%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">运行脚本的要求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AD%A6%E5%91%8A\"><span class=\"toc-text\">警告</span></a></li></ol></li></ol>","author":{"name":"Bref","slug":"blog-author","avatar":"https://avatarfiles.alphacoders.com/700/70031.gif","link":"/","description":"Nothing is true,Everything is permitted.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"NEAR SDK - 合约升级","uid":"4de024db83e7edaabd96aab0805a6851","slug":"合约升级","date":"2022-03-15T12:01:57.814Z","updated":"2022-03-16T09:35:59.405Z","comments":true,"path":"api/articles/合约升级.json","keywords":"区块链, NEAR Protocol, 智能合约, 夜影协议, NEAR","cover":null,"text":"升级合约当你修改了合约接口并重新部署时,你可能会看到这样的错误: Cannot deserialize the contract state. 为什么会这样? 当你的合约执行时,NEAR Runtime从磁盘读取序列化后的状态,并且使用当前的合约代码来加载它.当你的代码改变但是序...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"文档翻译","slug":"文档翻译","count":6,"path":"api/categories/文档翻译.json"}],"tags":[{"name":"NEAR","slug":"NEAR","count":6,"path":"api/tags/NEAR.json"},{"name":"near-sdk-rs","slug":"near-sdk-rs","count":6,"path":"api/tags/near-sdk-rs.json"}],"author":{"name":"Bref","slug":"blog-author","avatar":"https://avatarfiles.alphacoders.com/700/70031.gif","link":"/","description":"Nothing is true,Everything is permitted.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"NEAR SDK - 合约结构","uid":"5e99360b3a18af11a239b4863047980f","slug":"NEAR SDK - 合约结构","date":"2022-03-14T06:18:47.231Z","updated":"2022-03-14T10:41:23.906Z","comments":true,"path":"api/articles/NEAR SDK - 合约结构.json","keywords":"区块链, NEAR Protocol, 智能合约, 夜影协议, NEAR","cover":null,"text":"near_bindgen#[near_bindgen]宏被用于结构体和方法实现中以生成必要的代码使其成为一个可用的NEAR合约并且暴露想要公开的方法并使其能够被外部调用 例如,下面是一个简单的计数合约,#[near_bindgen]宏被这样使用: use near_sdk::bo...","link":"","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"文档翻译","slug":"文档翻译","count":6,"path":"api/categories/文档翻译.json"}],"tags":[{"name":"NEAR","slug":"NEAR","count":6,"path":"api/tags/NEAR.json"},{"name":"near-sdk-rs","slug":"near-sdk-rs","count":6,"path":"api/tags/near-sdk-rs.json"}],"author":{"name":"Bref","slug":"blog-author","avatar":"https://avatarfiles.alphacoders.com/700/70031.gif","link":"/","description":"Nothing is true,Everything is permitted.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}