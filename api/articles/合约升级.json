{"title":"NEAR SDK - 合约升级","uid":"4de024db83e7edaabd96aab0805a6851","slug":"合约升级","date":"2022-03-15T12:01:57.814Z","updated":"2022-03-16T07:28:18.443Z","comments":true,"path":"api/articles/合约升级.json","keywords":"区块链, NEAR Protocol, 智能合约, 夜影协议, NEAR","cover":null,"content":"<h3 id=\"升级合约\"><a href=\"#升级合约\" class=\"headerlink\" title=\"升级合约\"></a>升级合约</h3><p>当你修改了合约接口并重新部署时,你可能会看到这样的错误:</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">Cannot deserialize the contract state.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>为什么会这样?</p>\n<p>当你的合约执行时,NEAR Runtime从磁盘读取序列化后的状态,并且使用当前的合约代码来加载它.当你的代码改变但是序列化后的状态保持不填时,Runtime无法判断该如何去做.</p>\n<p>如何避免这样的错误?</p>\n<p>当你还处于研发阶段,你可以构建一个原型并在本地或测试网络中部署它.当你做出了一个突破性的修改,你可以删除所有以前的合约状态.下面有几种方法可以做到这一点.</p>\n<p>当你准备好部署一个更稳定的合约时,有几个生产策略可以帮助你更新合约状态而不无需删除它.一旦你的合约从”可信任模式”(维护者控制一个<code>Full Access key</code>)过渡到社区治理模式(不再拥有<code>Full Access key</code>).你就需要知道如何通过DAO投票来升级你的合约代码本身.</p>\n<h4 id=\"快速原型开发-删除所有内容\"><a href=\"#快速原型开发-删除所有内容\" class=\"headerlink\" title=\"快速原型开发:删除所有内容\"></a>快速原型开发:删除所有内容</h4><p>这里有两种方式来删除账户状态:</p>\n<ol>\n<li><code>rm -rf neardev &amp;&amp; nearr dev-deploy</code></li>\n<li>删除并重新创建一个合约账户</li>\n</ol>\n<p>对于这两种情况,让我们考虑下面的示例</p>\n<p><a href=\"https://github.com/near-examples/rust-status-message\">rust-status-message</a>合约示例拥有下面的结构:</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[near_bindgen]</span>\n<span class=\"token attribute attr-name\">#[derive(BorshDeserialize, BorshSerialize)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">Default</span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n            records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"r\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token attribute attr-name\">#[near_bindgen]</span>\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_status</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> account_id <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">signer_account_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_status</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> account_id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们假设你已经在测试网部署了合约,然后进行下面的调用:</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">near call [contract] set_status &#39;&#123;&quot;message&quot;: &quot;lol&quot;&#125;&#39; --accountId you.testnet\nnear view [contract] get_status &#39;&#123;&quot;account_id&quot;: &quot;you.testnet&quot;&#125;&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这将放回你通过调用<code>set_status</code>设置的消息,在本例中为”lol”</p>\n<p>此时,合约已经部署并拥有了一些状态</p>\n<p>现在,我们假设你修改了合约,为每个账户存储两种数据</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[near_bindgen]</span>\n<span class=\"token attribute attr-name\">#[derive(BorshDeserialize, BorshSerialize)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    taglines<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">Default</span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n            taglines<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"r\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token attribute attr-name\">#[near_bindgen]</span>\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_tagline</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> account_id <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">signer_account_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>taglines<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_tagline</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> account_id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>taglines<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_bio</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> account_id <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">signer_account_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>bios<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_bio</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> account_id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>bios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>你再次构建和部署这个合约,心想可能因为新的<code>taglines</code>LookupMap集合与旧的<code>record</code>LookupMap集合拥有同样的前缀(前缀<code>r</code>,在<code>LookupMap::new(b&#39;r&#39;.to_vec())</code>时设置),你在tagline中的数据应该是<code>&quot;lol&quot;</code> ,但当你<code>near view</code>这个合约时,你得到了<code>Cannot deserialize</code>消息.该怎么做?</p>\n<h4 id=\"1-rm-rf-neardev-amp-amp-near-dev-deploy\"><a href=\"#1-rm-rf-neardev-amp-amp-near-dev-deploy\" class=\"headerlink\" title=\"1.rm -rf neardev &amp;&amp; near dev-deploy\"></a>1.<code>rm -rf neardev &amp;&amp; near dev-deploy</code></h4><p>当我们开始一个新项目时,最快的部署合约的方法是使用<code>dev-deploy</code></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">near dev-deploy [--wasmFile .&#x2F;path&#x2F;to&#x2F;compiled.wasm]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>它会做下面几件事:</p>\n<ol>\n<li>创建一个测试网账户,名称类似于<code>dev-1232323131231123-356645345345345</code></li>\n<li>将账户名存储项目中的<code>neardev</code>文件夹</li>\n<li>将该账户的私钥存储到<code>~/.near-credentials</code>文件夹中</li>\n<li>将你的合约代码部署到该账户</li>\n</ol>\n<p>下一次你使用<code>dev-deploy</code>时,它会检查<code>neardev</code>文件夹然后重新部署到相同的账户,而不是重新创建一个</p>\n<p>但是在上面的例子里,我们想要删除账户状态.我们该怎么做?</p>\n<p>最简单的方法就是删除<code>neardev</code>文件夹,然后再次运行<code>near dev-deploy</code>.这将创建一个测试网账户以及(空的)账户状态.接下来在上面部署最新的合约.</p>\n<h4 id=\"2-删除并重新创建合约账户\"><a href=\"#2-删除并重新创建合约账户\" class=\"headerlink\" title=\"2.删除并重新创建合约账户\"></a>2.删除并重新创建合约账户</h4><p>如果你想要相比不断变化的<code>dev-*</code>账户更想要一个可预测的账户,最好的方法可能是创建一个子账户</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">near create-account app-name.you.testnet --masterAccount you.testnet<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后你可以在上面部署你的合约</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">near deploy --accountId app-name.you.testnet [--wasmFile .&#x2F;path&#x2F;to&#x2F;compiled.wasm]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在这个例子中,你改怎么删除所有账户状态并重新开始呢?删除子账户并重新创建它</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">near delete app-name.you.testnet you.testnet<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会将<code>app-name.you.testnet</code>账户的资金发送给<code>you.testnet</code>.并且会删除已经部署在它上面的合约已经所有的合约状态</p>\n<p>现在你创建了一个子账户并通过上面的命令重新部署了合约.账户的状态将是全新的,就像你第一次在上面部署一样.</p>\n<h3 id=\"生产应用基础\"><a href=\"#生产应用基础\" class=\"headerlink\" title=\"生产应用基础\"></a>生产应用基础</h3><p>当新代码部署到生产合约时,你显然不能像在快速原型开发过程中那么销毁旧的账户状态.那么怎么避免这种可怕的错误呢?</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">Cannot deserialize the contract state.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>你有几种不同的解决方案,取决于你的合约的复杂性.</p>\n<h4 id=\"Migration方法\"><a href=\"#Migration方法\" class=\"headerlink\" title=\"Migration方法\"></a><code>Migration</code>方法</h4><p>以前面的<code>rust-status-message</code>为例,你只需要一个简单的<code>migration</code>方法</p>\n<p>提醒一下,我们的目的是改变下面的合约:</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">Default</span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n            records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"r\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>变成:</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    taglines<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">Default</span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n            taglines<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"r\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>NEAR运行时查看你序列化并保存在磁盘中的代码和合约数据.当它执行代码时,将尝试匹配他们.如果你改变了代码但是数据已经保持不变,运行时将无法理解该如何去做.之前我们通过移除旧的序列化代码”解决”了这个问题.现在让我们来看看怎么更新已经存在的数据.</p>\n<p>首先,在最后一次部署时保持旧的结构体</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[derive(BorshDeserialize, BorshSerialize)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">OldStatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n    records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后在主结构体方法实现中添加一个<code>migrate</code>方法</p>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[private]</span>\n<span class=\"token attribute attr-name\">#[init(ignore_state)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">migrate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> old_state<span class=\"token punctuation\">:</span> <span class=\"token class-name\">OldStatusMessage</span> <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">state_read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n        taglines<span class=\"token punctuation\">:</span> old_state<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">,</span>\n        bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<details class=\"custom-details\">\n<summary>点击查看合约更新前后的差别</summary>\n<p><pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token operator\">+</span><span class=\"token attribute attr-name\">#[derive(BorshDeserialize, BorshSerialize)]</span>\n<span class=\"token operator\">+</span><span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">OldStatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>    records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">+</span>\n <span class=\"token attribute attr-name\">#[near_bindgen]</span>\n <span class=\"token attribute attr-name\">#[derive(BorshDeserialize, BorshSerialize)]</span>\n <span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">-</span>    records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>    taglines<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>    bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">&#125;</span>\n \n <span class=\"token keyword\">impl</span> <span class=\"token class-name\">Default</span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">-</span>            records<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"r\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>            taglines<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"r\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>            bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n \n <span class=\"token attribute attr-name\">#[near_bindgen]</span>\n <span class=\"token keyword\">impl</span> <span class=\"token class-name\">StatusMessage</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">-</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_status</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_tagline</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">let</span> account_id <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">signer_account_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span>        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>taglines<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">+</span>\n<span class=\"token operator\">+</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_tagline</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> account_id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>taglines<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token operator\">-</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_status</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> account_id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">-</span>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_bio</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">let</span> account_id <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">signer_account_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>bios<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">+</span>\n<span class=\"token operator\">+</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_bio</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> account_id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>bios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>account_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">+</span>\n<span class=\"token operator\">+</span>    <span class=\"token attribute attr-name\">#[private]</span>\n<span class=\"token operator\">+</span>    <span class=\"token attribute attr-name\">#[init(ignore_state)]</span>\n<span class=\"token operator\">+</span>    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">migrate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">let</span> old_state<span class=\"token punctuation\">:</span> <span class=\"token class-name\">OldStatusMessage</span> <span class=\"token operator\">=</span> <span class=\"token namespace\">env<span class=\"token punctuation\">::</span></span><span class=\"token function\">state_read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">+</span>            taglines<span class=\"token punctuation\">:</span> old_state<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>            bios<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LookupMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>        <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<p>当你部署了你的更改后,调用<code>migrate</code>方法</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">near deploy \\\n  --wasmFile res&#x2F;status_message.wasm \\\n  --initFunction &quot;migrate&quot; \\\n  --initArgs &quot;&#123;&#125;&quot; \\\n  --accountId app-name.you.testnet<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n\n\n\n\n","feature":true,"text":"升级合约当你修改了合约接口并重新部署时,你可能会看到这样的错误: Cannot deserialize the contract state. 为什么会这样? 当你的合约执行时,NEAR Runtime从磁盘读取序列化后的状态,并且使用当前的合约代码来加载它.当你的代码改变但是序...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"文档翻译","slug":"文档翻译","count":6,"path":"api/categories/文档翻译.json"}],"tags":[{"name":"NEAR","slug":"NEAR","count":6,"path":"api/tags/NEAR.json"},{"name":"near-sdk-rs","slug":"near-sdk-rs","count":6,"path":"api/tags/near-sdk-rs.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%87%E7%BA%A7%E5%90%88%E7%BA%A6\"><span class=\"toc-text\">升级合约</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91-%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">快速原型开发:删除所有内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-rm-rf-neardev-amp-amp-near-dev-deploy\"><span class=\"toc-text\">1.rm -rf neardev &amp;&amp; near dev-deploy</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%88%A0%E9%99%A4%E5%B9%B6%E9%87%8D%E6%96%B0%E5%88%9B%E5%BB%BA%E5%90%88%E7%BA%A6%E8%B4%A6%E6%88%B7\"><span class=\"toc-text\">2.删除并重新创建合约账户</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E4%BA%A7%E5%BA%94%E7%94%A8%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">生产应用基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Migration%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">Migration方法</span></a></li></ol></li></ol>","author":{"name":"Bref","slug":"blog-author","avatar":"https://avatarfiles.alphacoders.com/700/70031.gif","link":"/","description":"Nothing is true,Everything is permitted.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"NEAR SDK - 构建合约","uid":"a23d5d06f30f38065a9f935e1d761d88","slug":"构建合约","date":"2022-03-14T11:55:53.530Z","updated":"2022-03-15T12:02:07.968Z","comments":true,"path":"api/articles/构建合约.json","keywords":"区块链, NEAR Protocol, 智能合约, 夜影协议, NEAR","cover":null,"text":"基本说明你可以通过下面的命令来编译出你的合约的发行版本 cargo build --target wasm32-unknown-unknown --release 上面的build命令指定了一个target标志来创建一个WebAssembly.wasm文件 注意你的工程目录现在增...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"文档翻译","slug":"文档翻译","count":6,"path":"api/categories/文档翻译.json"}],"tags":[{"name":"NEAR","slug":"NEAR","count":6,"path":"api/tags/NEAR.json"},{"name":"near-sdk-rs","slug":"near-sdk-rs","count":6,"path":"api/tags/near-sdk-rs.json"}],"author":{"name":"Bref","slug":"blog-author","avatar":"https://avatarfiles.alphacoders.com/700/70031.gif","link":"/","description":"Nothing is true,Everything is permitted.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}